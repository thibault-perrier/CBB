using System.Collections;
using System.Collections.Generic;
using UnityEngine;

namespace CartoonFX 
{
    public class S_VFXFlameThrowerPlayer : MonoBehaviour
    {
        [SerializeField] private GameObject parent; 
        [SerializeField] GameObject[] effectsList;
        public GameObject currentEffect;
        int index = 0;
        private GameObject currentGOVFX;

        void Awake()
        {
            PlayAtIndex();
        }

        public void NextEffect()
        {
            index++;
            WrapIndex();
            PlayAtIndex();
        }

        public void PreviousEffect()
        {
            index--;
            WrapIndex();
            PlayAtIndex();
        }

        private void WrapIndex()
        {
            if (index < 0) index = effectsList.Length - 1;
            if (index >= effectsList.Length) index = 0;
        }

        public void PlayAtIndex()
		{
			if (currentGOVFX != null)
			{
                Destroy(currentGOVFX);
			}

			currentEffect = effectsList[index];
			// currentEffect.SetActive(true);
            currentGOVFX = Instantiate(currentEffect, parent.transform);
		}

        void Update()
        {
            if (Input.GetKeyDown(KeyCode.Space))
            {
                PlayStopCurrentEffect();
            }

            if (Input.GetKeyDown(KeyCode.Return))
            {
                CreateDestroyCurrentEffect();
            }

            if (Input.GetKeyDown(KeyCode.LeftArrow))
            {
                PreviousEffect();
            }

            if (Input.GetKeyDown(KeyCode.RightArrow))
            {
                NextEffect();
            }
        }

        private void PlayStopCurrentEffect()
        {
            if (currentEffect == null)
                return;
            
            var ps = currentGOVFX.GetComponent<ParticleSystem>();

            if (ps.isEmitting)
            {
                ps.Stop(true);
            }
            else
            {
                if (!currentGOVFX.gameObject.activeSelf)
                {
                    currentGOVFX.SetActive(true);
                }
                else
                {
                    ps.Play(true);
                    var cfxrEffects = currentEffect.GetComponentsInChildren<CFXR_Effect>();
                    foreach (var cfxr in cfxrEffects)
                    {
                        cfxr.ResetState();
                    }
                }
            }
        }

        private void CreateDestroyCurrentEffect()
        {
            if (currentGOVFX != null)
            {
                Destroy(currentGOVFX);
            }
            else 
            {
                PlayAtIndex();
            }
        }
    }
}